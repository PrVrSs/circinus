The Blob object represents a blob, which is a file-like object of immutable, raw data;
they can be read as text or binary data, or converted into a ReadableStream so its methods can be used for processing the data.
Blobs can represent data that isn't necessarily in a JavaScript-native format. The File interface is based on Blob,
inheriting blob functionality and expanding it to support files on the user's system.

Constructor
Blob() - Returns a newly created Blob object which contains a concatenation of all of the data in the array passed into the constructor.

Instance properties

Blob.prototype.size - The size, in bytes, of the data contained in the Blob object.
Blob.prototype.type - A string indicating the MIME type of the data contained in the Blob. If the type is unknown, this string is empty.

Instance methods

Blob.prototype.arrayBuffer() - Returns a promise that resolves with an ArrayBuffer containing the entire contents of the Blob as binary data.
Blob.prototype.slice() - Returns a new Blob object containing the data in the specified range of bytes of the blob on which it's called.
Blob.prototype.text() - Returns a promise that resolves with a string containing the entire contents of the Blob interpreted as UTF-8 text.